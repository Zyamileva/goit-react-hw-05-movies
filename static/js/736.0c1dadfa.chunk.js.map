{"version":3,"file":"static/js/736.0c1dadfa.chunk.js","mappings":"uRAEaA,EAAWC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8DAMpBC,EAAWH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+SAWpBG,EAAUL,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kEAMpBK,EAAYP,EAAAA,EAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,QAEpBO,EAAOT,EAAAA,EAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,qDAKfS,EAAOX,EAAAA,EAAAA,KAAWY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+BAIlBW,EAAYb,EAAAA,EAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,4IAStBa,EAAQf,EAAAA,EAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+BAIjBe,EAAUjB,EAAAA,EAAAA,GAASkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,+B,SClCnBiB,EAAO,WAClB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAGdG,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEfhB,GAAW,GAAMe,EAAAE,KAAA,GAGPC,EAAAA,EAAAA,IAAgBb,GAAS,KAAD,EAAAQ,EAAAE,EAAAI,KADxBxB,EAAIkB,EAAZO,KAAQzB,KAEVC,EAAY,OAAJD,QAAI,IAAJA,GAAAA,EAAM0B,OAAS1B,EAAO,IAC9B2B,QAAQC,IAAI,OAAQ5B,GAAMoB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAE1BX,EAASW,EAAAS,GAAMC,SAAS,QAEN,OAFMV,EAAAC,KAAA,GAExBhB,GAAW,GAAOe,EAAAW,OAAA,6BAAAX,EAAAY,OAAA,GAAAf,EAAA,yBAErB,kBAbe,OAAAH,EAAAmB,MAAA,KAAAC,UAAA,KAchBrB,GACF,GAAG,CAACH,KAGFyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACG7B,IAAS8B,EAAAA,EAAAA,KAAC/C,EAAK,CAAA8C,SAAE7B,IACjBJ,IAAWkC,EAAAA,EAAAA,KAAC7C,EAAO,CAAA4C,SAAC,gBACrBC,EAAAA,EAAAA,KAAC/D,EAAQ,CAAA8D,SACNrC,EAAKuC,KACJ,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAAS,OAClCF,IACEP,EAAAA,EAAAA,MAACxD,EAAQ,CAAA0D,SAAA,EACPC,EAAAA,EAAAA,KAACzD,EAAO,CAACgE,IA9BJ,mCA8BoBC,OAAOJ,GAAeK,IAAKJ,KACpDR,EAAAA,EAAAA,MAAC9C,EAAS,CAAAgD,SAAA,EACRC,EAAAA,EAAAA,KAACrD,EAAI,CAAAoD,SAAEM,KACPR,EAAAA,EAAAA,MAACpD,EAAS,CAAAsD,SAAA,EACRC,EAAAA,EAAAA,KAACnD,EAAI,CAAAkD,SAAC,eAAiB,IAAEO,UALhBH,EAShB,QAKb,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastLink = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: calc((100% - 15px * 4) / 5);\n  overflow: hidden;\n  min-height: 400px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const CastImg = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n`;\n\nexport const Character = styled.p``;\n\nexport const Name = styled.p`\n  font-size: 19px;\n  margin-bottom: 5px;\n`;\n\nexport const Text = styled.span`\n  font-weight: 700;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: start;\n  padding: 5px;\n  height: 100%;\n`;\n\nexport const Error = styled.h2`\n  font-weight: 700;\n`;\n\nexport const Loading = styled.h2`\n  font-weight: 700;\n`;\n","import { getCastByIdFilm } from 'api/filmsApi';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastLink,\n  Character,\n  CastImg,\n  CastItem,\n  Name,\n  Text,\n  Container,\n  Error,\n  Loading,\n} from './Cast.styled';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setLoading(true);\n        const {\n          data: { cast },\n        } = await getCastByIdFilm(movieId);\n        setCast(cast?.length ? cast : []);\n        console.log('cast', cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFilms();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <Error>{error}</Error>}\n      {loading && <Loading>...Loading</Loading>}\n      <CastLink>\n        {cast.map(\n          ({ id, profile_path, name, character }) =>\n            profile_path && (\n              <CastItem key={id}>\n                <CastImg src={imgBaseUrl.concat(profile_path)} alt={name} />\n                <Container>\n                  <Name>{name}</Name>\n                  <Character>\n                    <Text>Character:</Text> {character}\n                  </Character>\n                </Container>\n              </CastItem>\n            )\n        )}\n      </CastLink>\n    </>\n  );\n};\n"],"names":["CastLink","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","CastImg","_templateObject3","Character","_templateObject4","Name","_templateObject5","Text","_templateObject6","Container","_templateObject7","Error","_templateObject8","Loading","_templateObject9","Cast","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getCastByIdFil","_cast","_context","prev","next","getCastByIdFilm","sent","data","length","console","log","t0","message","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","map","_ref2","id","profile_path","name","character","src","concat","alt"],"sourceRoot":""}