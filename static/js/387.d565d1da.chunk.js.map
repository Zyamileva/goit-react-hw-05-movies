{"version":3,"file":"static/js/387.d565d1da.chunk.js","mappings":"sRAEaA,EAAaC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAEtBC,EAAaH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uDAKtBG,EAASL,EAAAA,EAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kCAIjBK,EAAUP,EAAAA,EAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,QAElBO,EAAQT,EAAAA,EAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,QAEhBS,EAAUX,EAAAA,EAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,QAElBW,EAAOb,EAAAA,EAAAA,KAAWc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,+B,SCNlBa,EAAU,WACrB,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEdG,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEfhB,GAAW,GAAMe,EAAAE,KAAA,GAGPC,EAAAA,EAAAA,IAAoBb,GAAS,KAAD,EAAAQ,EAAAE,EAAAI,KAD5BL,EAAOD,EAAfO,KAAQN,QAEVlB,EAAiB,OAAPkB,QAAO,IAAPA,GAAAA,EAASO,OAASP,EAAU,IAAIC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE1CX,EAASW,EAAAO,GAAMC,SAAS,QAEN,OAFMR,EAAAC,KAAA,GAExBhB,GAAW,GAAOe,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,wBAErB,kBAZe,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAahBnB,GACF,GAAG,CAACH,KAGFuB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACG3B,IAAS4B,EAAAA,EAAAA,KAAC/C,EAAK,CAAA8C,SAAE3B,IACjBJ,IAAWgC,EAAAA,EAAAA,KAAC7C,EAAO,CAAA4C,SAAC,gBACrBC,EAAAA,EAAAA,KAACzD,EAAU,CAAAwD,SACRnC,EAAOqC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAOF,EAAPE,QAASC,EAAMH,EAANG,OAAM,OAChCR,EAAAA,EAAAA,MAAClD,EAAU,CAAAoD,SAAA,EACTF,EAAAA,EAAAA,MAAChD,EAAM,CAAAkD,SAAA,EACLC,EAAAA,EAAAA,KAAC3C,EAAI,CAAA0C,SAAC,aAAe,IAAEM,MAEzBL,EAAAA,EAAAA,KAACjD,EAAO,CAAAgD,SAAEK,MAJKD,EAKJ,QAKvB,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul``;\n\nexport const ReviewItem = styled.li`\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Author = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const Content = styled.p``;\n\nexport const Error = styled.p``;\n\nexport const Loading = styled.p``;\n\nexport const Text = styled.span`\n  font-weight: 700;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { getrReviewsByIdFilm } from 'api/filmsApi';\nimport { useParams } from 'react-router-dom';\nimport {\n  Author,\n  ReviewItem,\n  ReviewList,\n  Content,\n  Error,\n  Loading,\n  Text,\n} from './Reviews.styled';\n\nexport const Reviews = () => {\n  const [review, setReview] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setLoading(true);\n        const {\n          data: { results },\n        } = await getrReviewsByIdFilm(movieId);\n        setReview(results?.length ? results : []);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFilms();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <Error>{error}</Error>}\n      {loading && <Loading>...Loading</Loading>}\n      <ReviewList>\n        {review.map(({ id, content, author }) => (\n          <ReviewItem key={id}>\n            <Author>\n              <Text>Author: </Text> {author}\n            </Author>\n            <Content>{content}</Content>\n          </ReviewItem>\n        ))}\n      </ReviewList>\n    </>\n  );\n};\n"],"names":["ReviewList","styled","_templateObject","_taggedTemplateLiteral","ReviewItem","_templateObject2","Author","_templateObject3","Content","_templateObject4","Error","_templateObject5","Loading","_templateObject6","Text","_templateObject7","Reviews","_useState","useState","_useState2","_slicedToArray","review","setReview","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getrReviewsByI","results","_context","prev","next","getrReviewsByIdFilm","sent","data","length","t0","message","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","map","_ref2","id","content","author"],"sourceRoot":""}