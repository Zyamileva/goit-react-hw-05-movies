{"version":3,"file":"static/js/488.f0412f59.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/SingleFilm/SingleFilm.styled.jsx","components/SingleFilm/SingleFilm.jsx","components/ButtonBack/ButtonBack.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import React from 'react';\n\nconst Cast = () => {\n  return <div>Cast</div>;\n};\n\nexport default Cast;\n","import React from 'react';\n\nconst Reviews = () => {\n  return <div>Reviews</div>;\n};\n\nexport default Reviews;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n\nexport const Img = styled.img`\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const Wrapper = styled.div``;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  margin-bottom: 10px;\n  font-size: 21px;\n`;\n\nexport const Year = styled.span`\n  font-weight: normal;\n  font-size: 17px;\n`;\n\nexport const TextSpan = styled.span`\n  font-weight: normal;\n  font-size: 17px;\n`;\n\nexport const Description = styled.p`\n  font-weight: 700;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n","import React from 'react';\nimport {\n  Container,\n  Img,\n  Wrapper,\n  Title,\n  Year,\n  TextSpan,\n  Description,\n} from './SingleFilm.styled';\n\nconst SingleFilm = ({ film }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    film;\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  const imgUrl = imgBaseUrl.concat(poster_path);\n  const releaseDate = release_date.slice(0, 4);\n  const voteScore = vote_average.toFixed(1);\n  const genresList = genres.map(ganre => ganre.name).join(', ');\n\n  return (\n    <Container>\n      <Img src={imgUrl} alt=\"{title}\" width=\"350\" />\n      <Wrapper>\n        <Title>\n          {title} <Year>({releaseDate})</Year>\n        </Title>\n        <Description>\n          User score: <TextSpan>{voteScore}%</TextSpan>\n        </Description>\n        <Description>\n          Overview: <TextSpan>{overview}</TextSpan>\n        </Description>\n        <Description>\n          Genres: <TextSpan>{genresList}</TextSpan>\n        </Description>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default SingleFilm;\n","import React from 'react';\n\nconst ButtonBack = () => {\n  return <div>‚Üê Go back</div>;\n};\n\nexport default ButtonBack;\n","import React, { useEffect, useState } from 'react';\nimport { getFilmById } from 'api/filmsApi';\nimport { useParams } from 'react-router-dom';\nimport SingleFilm from 'components/SingleFilm/SingleFilm';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\n// import ButtonBack from 'components/ButtonBack/ButtonBack';\n\nexport const MovieDetails = () => {\n  const [film, setFilm] = useState('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        setLoading(true);\n        const { data } = await getFilmById(movieId);\n        setFilm(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFilm();\n  }, [movieId]);\n\n  if (!film) {\n    return null;\n  }\n\n  return (\n    <div>\n      {error && <p>{error}</p>}\n      {loading && <p>...Loading</p>}\n      <ButtonBack />\n      <SingleFilm film={film} />\n      <div>\n        <Cast></Cast>\n        <Reviews></Reviews>\n      </div>\n    </div>\n  );\n};\n"],"names":["_jsx","children","Container","styled","_templateObject","_taggedTemplateLiteral","Img","_templateObject2","Wrapper","_templateObject3","Title","_templateObject4","Year","_templateObject5","TextSpan","_templateObject6","Description","_templateObject7","_ref","film","poster_path","title","release_date","vote_average","overview","genres","imgUrl","concat","releaseDate","slice","voteScore","toFixed","genresList","map","ganre","name","join","_jsxs","src","alt","width","MovieDetails","_useState","useState","_useState2","_slicedToArray","setFilm","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","movieId","useParams","useEffect","fetchFilm","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getFilmById","data","_context","prev","next","getFilmById","sent","t0","message","finish","stop","apply","arguments","ButtonBack","SingleFilm","Cast","Reviews"],"sourceRoot":""}